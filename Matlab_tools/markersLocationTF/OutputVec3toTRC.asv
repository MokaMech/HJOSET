%%
% This code serves as a "translation" mean between
% the GIL experiement markerSet and the Gait2354 marketSet
% declared in the CusToM Toolbox.
% 
% For each GIL experiment you are intested in :
% Step 1 : Open in OpenSim the GILXX_10DOF_78Markers.osim model
%          Run the AnalyseTool with the xml setup File
%          'GILXX_Analyse_Setup_for_markersOutput'
%
%               - INPUTS : GIL11_'spd'.trc       File containing the gait
%               kinematics expressed with the old marketSet.
%
%               * OUTPUTS : GIL_OutputsVec3.sto   File containing the gait
%               kinematics expressed with the new marketSet.
%
% Step 2 : In the Matlab_code section, run the CusToM_for_GRF/outputVec3toTRC.m file
%          Follow the instructions : select the OutputsVec3.sto file to
%          extract data from.
%               - INPUTS : GIL_OutputsVec3.sto  Containts the markers
%               coords in Vec3 format [X,Y,Z] with labels
%               (markerset/NAME|location)
%
%               * OUPUTS : OutputLabels : Contains the markers labels
%                          OutputData   : Contains the markers coords in
%                                         [ X ] [ Y ] [ Z ] format
% Step 3 : Copy paste the new coords in a copy of the original .trc file
%               - INPUTS : GIL11_'spd'.trc
%               - OUPUTS : GIL_'spd'.trc
%%
[file,path] = uigetfile('.sto');

InputLabels = importGILVect3ColNames([path file]);
InputLabels_size = size(InputLabels);
%OutputLabels = zeros(InputLabels_size));

InputData = importGILVect3Data([path file]);
InputData_size = size(InputData);
OutputData = zeros(InputData_size(1),3*InputData_size(2));
%%
for i = 1:InputLabels_size(2)
    label = strsplit(InputLabels(i),'/');
    label = strsplit(label(3),'|');
    OutputLabels(i) = label(1);
end

for i = 1:size(OutputLabels,2)
    OutputLabels_XYZ()

end

%%
for i = 1:InputData_size(1)
    k = 1;
    for j = 1:InputData_size(2)
        cell = InputData(i,j);
        cell_splited = strsplit(cell,',');
        OutputData(i,k) = str2double(cell_splited(1,1))*1000;
        OutputData(i,k+1) = str2double(cell_splited(1,2))*1000;
        OutputData(i,k+2) = str2double(cell_splited(1,3))*1000; 
        k = k + 3;
    end
end
